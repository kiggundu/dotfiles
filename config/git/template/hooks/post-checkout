#!/bin/sh
# Git hook to display last commit information when switching branches.

# prev_head=$1
# new_head=$2
# changing_branch=$3

[ -t 1 ] || exit 0

is_clone=0
if [ "$3" = 1 ]; then
  if [ "$1" = "0000000000000000000000000000000000000000" ]; then
    # shellcheck disable=SC2009
    if ps -s "$(ps -o sess:1= -p $$)" -o comm= | grep -qE '^(pacaur)'; then
      exit
    fi
    is_clone=1
  fi
fi

# Special template/display for "pip" cloning/checking out a VCS URL.
if [ -n "$PIP_EXISTS_ACTION" ]; then
  [ "$is_clone" = 1 ] && pip_mode=clone || pip_mode=checkout
  if [ "$pip_mode" = checkout ]; then
    git --no-pager log -1 --pretty=format:"%C(green) checkout: $(git remote get-url origin)%n%C(blue) - %s%C(reset) (%cr, %h, %cN)" >&2
  else
    git --no-pager log -1 --pretty=format:"%C(green)pip-$pip_mode: $(git remote get-url origin)%n%C(blue) - %s%C(reset) (%cr, %h, %cN)" >&2
  fi
  # Note: --no-pager does not add a newline.
  echo

else
  # Display last commit only when not checking out a file.
  if [ "$1" != "$2" ]; then
    git --no-pager log -1 --pretty=format:"Last commit: %C(blue)%s%C(reset) (%cr, %h, %cN)" >&2
    # Note: --no-pager does not add a newline.
    echo
  fi
  # Parse git-dir, for 'git-clone --recursive' and submodules.
  gitdir="$(git rev-parse --git-dir)"
  "$gitdir/hooks/ctags" post-checkout &
fi
